html(lang="en", dir="ltr")
  title #{pagetitle}
  meta(charset="utf-8")
  meta(http-equiv="X-UA-Compatible", content="IE=edge")

  link(rel="stylesheet", href="/admin/bootstrap/css/bootstrap.min.css")
  link(rel="stylesheet", href="/admin/dist/css/AdminLTE.min.css")
  link(rel="stylesheet", href="/admin/dist/css/skins/skin-yellow.css")
  link(rel="stylesheet", href="/css/main.css")

  link(rel="apple-touch-icon", sizes="57x57", href="favicon/apple-touch-icon-57x57.png")
  link(rel="apple-touch-icon", sizes="60x60", href="favicon/apple-touch-icon-60x60.png")
  link(rel="apple-touch-icon", sizes="72x72", href="favicon/apple-touch-icon-72x72.png")
  link(rel="apple-touch-icon", sizes="76x76", href="favicon/apple-touch-icon-76x76.png")
  link(rel="apple-touch-icon", sizes="114x114", href="favicon/apple-touch-icon-114x114.png")
  link(rel="apple-touch-icon", sizes="120x120", href="favicon/apple-touch-icon-120x120.png")
  link(rel="apple-touch-icon", sizes="144x144", href="favicon/apple-touch-icon-144x144.png")
  link(rel="apple-touch-icon", sizes="152x152", href="favicon/apple-touch-icon-152x152.png")
  link(rel="apple-touch-icon", sizes="180x180", href="favicon/apple-touch-icon-180x180.png")
  link(rel="icon", type="image/png", href="favicon/favicon-32x32.png", sizes="32x32")
  link(rel="icon", type="image/png", href="favicon/android-chrome-192x192.png", sizes="192x192")
  link(rel="icon", type="image/png", href="favicon/favicon-96x96.png", sizes="96x96")
  link(rel="icon", type="image/png", href="favicon/favicon-16x16.png", sizes="16x16")
  link(rel="manifest", href="favicon/manifest.json")
  link(rel="mask-icon", href="favicon/safari-pinned-tab.svg", color="#f39c12")
  meta(name="msapplication-TileColor", content="#f39c12")
  meta(name="msapplication-TileImage", content="favicon/mstile-144x144.png")
  meta(name="theme-color", content="#f39c12")

  include counts

  body.skin-yellow.fixed.layout-boxed
    .wrapper
      header.main-header
        a.logo
          span.logo-lg
            | E2E testing

        nav.navbar.navbar-static-top(role="navigation")

          if state == "results"
            .navbar-custom-menu
              ul.nav.navbar-nav
                li
                  a.js-show-all(href="#")
                    | Show all tests
                li
                  a.js-show-failed(href="#")
                    | Show failed tests only

      .content-wrapper
        .content.body
          h1.sr-only User interaction testing
          if state == 'noResults'
            | There are currently no results for #{program}
            button.btn.btn-primary.btn-lg.btn-block(href='/')
              | Launch tests
          if state == 'inProgress'
            .row
              .col-md-12.col-sm-12.col-xs-12.js-progress-container
                input.js-program(type="hidden" data-program=program)
                .box.box-solid
                  .box-header.with-border
                    h3.box-title
                      if prevTime.time == 'First run'
                        | #{program} tests in progress, this is your first run.
                      else
                        | #{program} tests in progress, previous test took #{prevTime.time}.
                  .box-body
                    .progress.active
                      .progress-bar.progress-bar-success.progress-bar-striped.js-test-progress(role='progressbar', aria-valuenow='0', aria-valuemin='0', aria-valuemax='100', style='width: 0%')
                        span.js-progress-value
                          | 0%
                        span.sr-only In progress
          if state == 'results'
            .row
              .col-md-3.col-sm-6.col-xs-12
                if percent == 100
                  .info-box.bg-green
                    span.info-box-icon
                      i.glyphicon.glyphicon-ok
                    .info-box-content
                      span.info-box-text passed tests
                      span.info-box-number #{percent}%
                      .progress
                        .progress-bar(style='width: #{percent}%')
                      span.progress-description
                        | test passed
                else
                  .info-box.bg-red
                    span.info-box-icon
                      i.glyphicon.glyphicon-remove
                    .info-box-content
                      span.info-box-text passed tests
                      span.info-box-number #{percent}%
                      .progress
                        .progress-bar(style='width: #{percent}%')
                      span.progress-description
                        | Test failed
              .col-md-4.col-sm-6.col-xs-12
                .info-box
                  span.info-box-icon.bg-green
                    i.glyphicon.glyphicon-time
                  .info-box-content
                    span.info-box-number #{prevTime.time}
                    span.progress-description
                      span.small
                      | Run on #{prevTime.date} at #{prevTime.minutes}
                    span.progress-description
                      span.small By
                      |  #{user}
            .row
              .col-md-12.col-sm-12.col-xs-12
                .box
                  .box-header
                    h3.box-title
                      | Test results
                  .box-body.table-responsive.no-padding
                    table.table.table-hover
                      tbody
                        tr
                          th Status
                          th Description
                          th Error


                        each result, resultI in results
                          each spec, specI in result.specs
                            if spec.status == "failed"
                              tr.failed
                                td
                                  span.glyphicon.glyphicon-remove.text-danger
                                td #{spec.fullName}
                                td.table-responsive.no-padding
                                  table.table
                                    tbody
                                      each failure in spec.failedExpectations
                                        tr
                                          td
                                            p
                                              | #{failure.message}
                                          td
                                            button.btn.btn-danger(data-stack = failure.stack, data-toggle="modal", data-target="#stackTracer", data-error = resultI+' spec'+specI+' : '+failure.message)
                                              i.glyphicon.glyphicon-tasks
                            if spec.status == "passed"
                               tr.passed
                                td
                                  span.glyphicon.glyphicon-ok.text-success
                                td #{spec.fullName}
                                td
                            //-   .box.box-success.passed
                            //-     .box-header
                            //-       .box-title
                            //-         span.text-green.glyphicon.glyphicon-ok
                            //-         span  #{spec.fullName}




      include aside
  include footer


